
; One-Wire Serial Communication PIO Program
; This program implements a basic One-Wire protocol using the PIO state machine.
; |byte|name|size|
; |   0|R/W|1|
; |   1|index|2|
; |   2|register|2|
; |   3|data|1-4|
; |   4|\n|1|
; Total size: 7-10 bytes, 56 - 80 bits
; R0001\n
.program PioOneWireSerial_tx
.side_set 1 opt pindirs
    pull       side 0   ; Assert stop bit, or stall with line in idle state
    set x, 7   side 1 [7]  ; Preload bit counter, assert start bit for 8 clocks
bitloop_tx:                   ; This loop will run 8 times (8n1 UART)
    out pindirs, 1            ; Shift 1 bit from OSR to the first OUT pin
    jmp x-- bitloop_tx   [6]  ; Each loop iteration is 8 cycles.

.wrap             

.program PioOneWireSerial_rx
start:
    wait 0 pin 0       ; Stall until start bit is asserted
    set x, 7    [10]    ; Preload bit counter, then delay until halfway through
bitloop_rx:                ; the first data bit (12 cycles incl wait, set).
    in pins, 1          ; Shift data bit into ISR
    jmp x-- bitloop_rx [6] ; Loop 8 times, each loop iteration is 8 cycles
    jmp pin good_stop   ; Check stop bit (should be high)

    irq 4 rel           ; Either a framing error or a break. Set a sticky flag,
    wait 1 pin 0        ; and wait for line to return to idle state.
    jmp start           ; Don't push data if we didn't see good framing.

good_stop:              ; No delay before returning to start; a little slack is
    push                ; important in case the TX clock is slightly too fast.
.wrap